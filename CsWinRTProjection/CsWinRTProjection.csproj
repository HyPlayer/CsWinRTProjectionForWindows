<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<!-- Set target framework to .NET 6 -->
		<TargetFramework>net6.0-windows10.0.22621.0</TargetFramework>
		
		<!-- Specify the platforms -->
		<Platforms>x86;x64;arm64</Platforms>
		<RuntimeIdentifiers>win10-x86;win10-x64;win10-arm64</RuntimeIdentifiers>
		
		<!-- Configure C#/WinRT -->
		<CsWinRTWindowsMetadata>10.0.22621.0</CsWinRTWindowsMetadata>
		<CsWinRTFilters>
			-include Windows
		</CsWinRTFilters>
		<DefineConstants>UAC_VERSION_15</DefineConstants>
		
		<!-- Set the assembly name (to prevent conflicts with projects using C#/WinRT) -->
		<AssemblyName>Microsoft.Windows.Full.SDK.NET</AssemblyName>
	</PropertyGroup>

	<ItemGroup>
		<!-- Remove the built-in Microsoft.Windows.SDK.NET.Ref projection to prevent conflicts with the C#/WinRT generated projection. -->
		<FrameworkReference Remove="Microsoft.Windows.SDK.NET.Ref" />
		
		<!-- C#/WinRT NuGet, we are using a private version with support for WUX. -->
		<PackageReference Include="Microsoft.Windows.CsWinRT" Version="2.1.0-private.0" />
		
		<!-- Windows SDK Contracts, used as input WinMDs for C#/WinRT -->
		<PackageReference Include="Microsoft.Windows.SDK.Contracts" Version="10.0.22621.2" />
	</ItemGroup>

	<!-- Since Microsoft.Windows.SDK.Contracts come with System.Runtime.WindowsRuntime, which provide some basic classes for WinRT. -->
	<!-- It therefore conflicts with WinRT.Runtime (part of C#/WinRT). -->
	<!-- This target removes System.Runtime.WindowsRuntime so that WinRT.Runtime would be used instead. -->
	<Target Name="RemoveSystemRuntimeWindowsRuntime" BeforeTargets="BeforeCompile" AfterTargets="ResolveReferences">
		<ItemGroup>
			<SRWRRemovedReferences Include="@(ReferencePath)" Condition="$([System.String]::Copy(%(ReferencePath.Filename)).StartsWith('System.Runtime.WindowsRuntime'))" />
			<ReferencePath Remove="@(ReferencePath)" Condition="$([System.String]::Copy(%(ReferencePath.Filename)).StartsWith('System.Runtime.WindowsRuntime'))" />
			<ReferencePathWithRefAssemblies Remove="@(SRWRRemovedReferences)" Condition="'%(SRWRRemovedReferences.Filename)%(SRWRRemovedReferences.Extension)' == '%(ReferencePathWithRefAssemblies.Filename)%(ReferencePathWithRefAssemblies.Extension)'" />
			<ReferenceCopyLocalPaths Remove="@(SRWRRemovedReferences)" />
			<ReferenceDependencyPaths Remove="@(ReferenceDependencyPaths)" Condition="$([System.String]::Copy(%(ReferencePath.Filename)).StartsWith('System.Runtime.WindowsRuntime'))"/>
		</ItemGroup>
	</Target>

</Project>
